@using FoodOrderApp.Models
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.Graph.Models
@using Microsoft.Graph

@page "/createOrder"
@inject IHttpClientFactory HttpClientFactory
@inject IToastService ToastService

<h3>Order</h3>

<EditForm Model="@order" OnSubmit="@SubmitOrder">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>
        Nazwa Restauracji:
        <InputText @bind-Value="order.RestaurantName" Placeholder ="np. KFC"/>
        <ValidationMessage For="() => order.RestaurantName" />
    </div>
    <div>
        Minimalna wartość zamówienia:
        <InputNumber @bind-Value="order.MinCost" />
        <ValidationMessage For="() => order.MinCost" />
    </div>
    <div>
        Koszt dostawy:
        <InputNumber @bind-Value="order.DeliveryFee" />
        <ValidationMessage For="() => order.DeliveryFee" />
    </div>
    <div>
        Darmowy dowóz od(opcjonalne):
        <InputNumber @bind-Value="order.MinCostForFreeDelivery" />
        <ValidationMessage For="() => order.MinCostForFreeDelivery" />
    </div>
    <div>
        Numer telefonu:
        <InputText @bind-Value="order.PhoneNumber" />
        <ValidationMessage For="() => order.PhoneNumber" />
    </div>
    <div>
        Numer konta bankowego:
        <InputText @bind-Value="order.AccountNumber" />
        <ValidationMessage For="() => order.AccountNumber" />
    </div>
    <div>
        <FluentButton Appearance="Appearance.Accent" Type="ButtonType.Submit">Stwórz zamówienie</FluentButton>
    </div>
</EditForm>

@code {
    [Parameter]
    public UserInfo User { get; set; }
    public OrderModel order = new OrderModel();

    protected override async Task OnInitializedAsync()
    {

    }
    private async Task SubmitOrder()
    {
        //order.Orderer = user.Id;
        order.Orderer = User.ObjectId;
        order.OrdererName = User.DisplayName;
        var httpClient = HttpClientFactory.CreateClient("FoodOrderApi");
        var response = await httpClient.PostAsJsonAsync("api/OrderModels", order);
        //response = await httpClient.GetAsync("api/OrderModels");

        if (response.IsSuccessStatusCode)
        {
            order = new OrderModel();
            ToastService.ShowSuccess("Dodano zamówienie.");
        }
        else
        {
            ToastService.ShowError("Nie dodano zamówienia");
        }
    }
    
}